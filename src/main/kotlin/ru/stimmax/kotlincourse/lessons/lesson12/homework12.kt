package org.example.ru.stimmax.kotlincourse.lessons.lesson12

fun main() {
    // Задачи на приведение коллекции к значению
    val ex = listOf(5, 11, 65, 21, 55, 1, -1, 32, -4, 55, 0, 19, 20, -11, 27)

    // 1. Проверить, что размер коллекции больше 5 элементов.
    if (ex.size > 5) {
        println("List size > 5")
    }

    // 2. Проверить, что коллекция пустая
    if (ex.isEmpty()) {
        println("List is empty")
    }

    // 3. Проверить, что коллекция не пустая
    if (ex.isNotEmpty()) {
        println("List is not empty")
    }

    // 4. Взять элемент по индексу или создать значение если индекса не существует
    val ex4 = ex.getOrElse(50) { -1 }

    // 5. Собрать коллекцию в строку
    val ex5 = ex.joinToString()

    // 6. Посчитать сумму всех значений
    val ex6 = ex.sum()

    // 7. Посчитать среднее
    val ex7 = ex.average()

    // 8. Взять максимальное число
    val ex8 = ex.max()

    // 9. Взять минимальное число
    val ex9 = ex.min()

    // 10. Взять первое число или null
    val ex10 = ex.firstOrNull()

    // 11. Проверить что коллекция содержит элемент
    if (ex.contains(55)) {
        println("List contains 55")
    }

    // Задачи на обработку коллекций
    // 12. Отфильтровать коллекцию по диапазону 18-30
    val ex12 = ex.filter { it in 18..30 }

    // 13. Выбрать числа, которые не делятся на 2 и 3 одновременно
    val ex13 = ex.filter { it % 2 != 0 && it % 3 != 0 }

    // 14. Очистить текстовую коллекцию от null элементов
    val ex14 = ex.filterNotNull()

    // 15. Преобразовать текстовую коллекцию в коллекцию длин слов
    val exx = listOf("AAA", "b", "cdsa", "qwkejrn", " ", "asdf")
    val ex15 = exx.map { it.length }

    // 16. Преобразовать текстовую коллекцию в мапу, где ключи - перевёрнутые слова, а значения - длина слов
    val ex16 = exx.map { it.reversed() to it.length }

    // 17. Отсортировать список в алфавитном порядке
    val ex17 = exx.sorted()

    // 18. Взять первые 3 элемента списка
    val ex18 = ex.take(3)

    // 19. Распечатать квадраты элементов списка
    ex.forEach {
        println(it*it)
    }

    // 20. Группировать список по первой букве слов
    val ex20 = exx.groupBy { it.first() }

    // 21. Очистить список от дублей
    val ex21 = ex.distinct()

    // 22. Отсортировать список по убыванию
    val ex22 = ex.sortedDescending()

    // 23. Взять последние 3 элемента списка
    val ex23 = ex.drop(3)

    // 24
    println(f24(listOf()))
    println(f24(listOf(1, 2, 3)))
    println(f24(listOf(0, 12, 14, 121, 123)))
    println(f24(listOf(213412, 21341, 12341, 1234123, 123412, 1234123)))
    println(f24(listOf(5, 15, 2, 18, 3, 17)))
    println(f24(listOf(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)))
    println(f24(listOf(-100, -1000, - 15, -99, -123, -77)))
    println(f24(listOf(2134123, 1101, 12341, 1001, 10000, 213412)))
    println(f24(listOf(1234, 14, 555, 3, 543, 66)))
    println(f24(listOf(1, 0, 0, 0, 0, 0, 0)))

    // 25
    println(f25(listOf(85, 58, 90, 74, 88, 67, 95, 92, 50, 42, 12)))

    // 26
    println(f26(listOf("Стол", "табурет", "ваза", "Кружка", "Зеркало", "ковер", "Шкаф", "часы", "Люстра",
        "подушка", "Картина", "столик", "Вазон", "шторы", "Пуф", "книга", "Фоторамка", "светильник", "Коврик",
        "вешалка", "Подставка", "телевизор", "Комод", "полка", "Абажур", "диван", "Кресло", "занавеска", "Бра",
        "пепельница", "Глобус", "статуэтка", "Поднос", "фигурка", "Ключница", "плед", "Тумба", "игрушка",
        "Настенные часы", "подсвечник", "Журнальный столик", "сувенир", "Корзина для белья", "посуда",
        "Настольная лампа", "торшер", "Этажерка")))

    // 27
    println(f27(listOf("Стол", "табурет", "ваза", "Кружка", "Зеркало", "ковер", "Шкаф", "часы", "Люстра",
        "подушка", "Картина", "столик", "Вазон", "шторы", "Пуф", "книга", "Фоторамка", "светильник", "Коврик",
        "вешалка", "Подставка", "телевизор", "Комод", "полка", "Абажур", "диван", "Кресло", "занавеска", "Бра",
        "пепельница", "Глобус", "статуэтка", "Поднос", "фигурка", "Ключница", "плед", "Тумба", "игрушка",
        "Настенные часы", "подсвечник", "Журнальный столик", "сувенир", "Корзина для белья", "посуда",
        "Настольная лампа", "торшер", "Этажерка")))

    // 28
    println(f28(listOf(1, 3, 5, 7, 3, 1, 8, 9, 9, 7)))

    // 29
    println(f29(listOf(22, 18, 30, 45, 17, null, 60), 18))
}

// Задача 24. Характеристика числовой коллекции
// Напиши функцию, которая принимает коллекцию чисел и возвращает строку с характеристикой коллекции используя конструкцию when
// Если коллекция пустая - “Пусто”
// Если количество элементов меньше пяти - “Короткая”
// Если коллекция начинается с 0 - “Стартовая”
// Если сумма всех чисел больше 10000 - “Массивная”
// Если среднее значение равно 10 - “Сбалансированная”
// Если длина строки образованная склеиванием коллекции в строку равна 20 - “Клейкая”
// Если максимальное число меньше -10 - “Отрицательная”
// Если минимальное число больше 1000 - “Положительная”
// Если содержит одновременно числа 3 и 14 - “Пи***тая”
// Иначе - “Уникальная”
fun f24(l: List<Int>): String {
    when {
        l.isEmpty() -> return "Пусто"
        l.size < 5 -> return "Короткая"
        l.first() == 0 -> return "Стартовая"
        l.sum() > 10000 -> return "Массивная"
        l.average() == 10.0 -> return "Сбалансированная"
        l.joinToString(separator = "").length == 20 -> return "Клейкая"
        l.max() < -10 -> return "Отрицательная"
        l.min() > 1000 -> return "Положительная"
        l.contains(3) && l.contains(14) -> return "Пи***тая"
        else -> return "Уникальная"
    }
}

// Задача 25. Анализ учебных оценок
// Напиши функцию, которая принимает список чисел и возвращает список чисел.
// Цель: Отфильтровать удовлетворительные оценки (>=60), отсортировать оставшиеся по возрастанию и взять первые 3.
// Вызывай методы обработки и фильтрации последовательно один из другого, чтобы результат предыдущего метода
// являлся основой для следующего.
fun f25(l: List<Int>): List<Int> {
    return l.filter{it >= 60}.sorted().take(3)
}

// Задача 26. Создание каталога по первой букве
// Напиши функцию, которая принимает список строк и возвращает словарь с ключом - буквой и значением - списком строк.
// Цель: Привести все слова в списке к нижнему регистру, сгруппировать в каталог по первой букве используя метод groupBy
fun f26(l: List<String>): Map<Char, List<String>> {
    return l.map{it.lowercase()}.groupBy{it.first()}
}

// Задание 27. Подсчёт средней длины слов в списке
// Напиши функцию, которая принимает список строк и возвращает строку.
// Цель: Перевести все слова в количество букв, подсчитать среднее значение.
// Вернуть форматированный текст с двумя знаками после запятой, используя функцию format и подходящий шаблон.
fun f27(l: List<String>): String {
    return "%.2f".format(l.map{l.size}.average())
}

// Задание 28: Категоризация чисел
// Напиши функцию, которая принимает список чисел и возвращает словарь с ключами - строками и значениями - список чисел.
// Цель: Отобрать уникальные числа, отсортировать по убыванию и сгруппировать по четности (“четные” и “нечетные”).
fun f28(l: List<Int>): Map<String, List<Int>> {
    return l.distinct().sortedDescending().groupBy{if (it % 2 == 0) "четные" else "нечетные"}
}

// Задание 29: Поиск первого подходящего элемента
// Напиши функцию, которая принимает список чисел и число и возвращает nullable число.
// Цель: Найти первый возраст в списке, который соответствует условию (больше второго аргумента) и вернуть его,
// либо null если значения не нашлось.
fun f29(l: List<Int?>, target: Int): Int? {
    return l.firstOrNull { it != null && it > target}
}
